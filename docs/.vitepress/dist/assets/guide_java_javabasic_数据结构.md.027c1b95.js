import{_ as a,o as s,c as n,Q as e}from"./chunks/framework.dd5a1521.js";const v=JSON.parse('{"title":"数据结构","description":"","frontmatter":{"title":"数据结构","date":"2024-01-19T10:34:36.000Z","category":"java基础相关","tag":"java","top_img":false},"headers":[],"relativePath":"guide/java/javabasic/数据结构.md","filePath":"guide/java/javabasic/数据结构.md"}'),p={name:"guide/java/javabasic/数据结构.md"},l=e(`<h2 id="数组" tabindex="-1">数组 <a class="header-anchor" href="#数组" aria-label="Permalink to &quot;数组&quot;">​</a></h2><h3 id="声明方式" tabindex="-1">声明方式 <a class="header-anchor" href="#声明方式" aria-label="Permalink to &quot;声明方式&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//数据类型 []  数组名称 = new 数据类型[数组长度];</span></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">[] ids </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//数据类型 []  数组名称 = new 数据类型[数组长度];</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] ids </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">]</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//数据类型 [] 数组名称 = {数组元素1，数组元素2，......}</span></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">[] ids </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//数据类型 [] 数组名称 = {数组元素1，数组元素2，......}</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] ids </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">}</span></span></code></pre></div><p>注：</p><p>1.数组是不可变的，创建的时候即确定了大小</p><p>2.数组元素下标是从0开始的</p><p>3.length属性记录数组的大小</p><p>4.特点(有序)</p><pre><code>- 插入快，以及根据下标查找快
- 删除慢，当删除一个后后续的元素会向前移动
</code></pre><h3 id="排序" tabindex="-1">排序 <a class="header-anchor" href="#排序" aria-label="Permalink to &quot;排序&quot;">​</a></h3><h4 id="冒泡" tabindex="-1">冒泡 <a class="header-anchor" href="#冒泡" aria-label="Permalink to &quot;冒泡&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span></code></pre></div>`,13),o=[l];function t(c,r,i,d,h,y){return s(),n("div",null,o)}const _=a(p,[["render",t]]);export{v as __pageData,_ as default};
